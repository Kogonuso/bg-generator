This is a lecture on how to use github for source control.

Firstly, let's download and install the git client to our computer, then 
create an empty project on github and call it 'bg-generator'

Next we open folder in our computer and that will be our workspace
then open a commadline terminal and cd to that folder
Example: cd desktop\web-learning-javaScript\git

This will now place the terminal in the workspace directory

You can use the Dir command to list all the files and folders in the current directory

Then we will clone the bd-generator project from github using the FIRST command:
git clone https://github.com/Kogonuso/bg-generator.git

add files to the cloned project and 
run the SECOND command 'git status' to see the untracked files on github

to add the files to the github project on github
run the THIRD command 'git add' followed by the file name.
 Example:
 git add index.html
 git add style.css
 git add script.js 

 or you can just add all the files and folders in the directory by running the command:
 git add .


Run the FOURTH command 'git commit' -m "message to show changes or new action you took" to commit the files 

Run the FIFTH command 'git push' to actually push the files into the project in github

SUMMARY OF COMMANDS:
'git clone url' to download project into your computer
'git status' to see the status/branch you are on Github
'git add fileName or . for all' to add new files to be committed into the project
'git commit -m "message"' to commit files to be pushed into the project with message to show
'git push' to actually push the project files into the Github repository.


=============The above is how to create a project and push it to github=====


Below we talk about how to actually make a pull request:
Say two people are working on the same project. The pull command:
'git pull' downloads the lastest content of the project stored on Github onto your working directory and
replaces older version of files that are on the working directory. So be sure you want these older files 
replaced should there be new cnahges, or rename them before running the 'git pull' command.


Branching:

Up until now we have been working on the Main(Master) Branch.

It is not good to be committing and pushing files to the production site, as this could break the site
and cause loses.

So to avoid this we create branch to temporarily hold new updates until they are confirmed to be used
to merge/replace with the production files in the Main(Master) Branch.
